services:
  kafka-1:
    image: bitnami/kafka:3.8.0
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=d8ce1515-401e-44d4-a444-1b6dba479047
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx2G -Xms2G
    volumes:
      - ./server-1.properties:/opt/bitnami/kafka/config/server.properties
    networks:
      - kafka-net
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1"
    #       memory: "2g"
  kafka-2:
    image: bitnami/kafka:3.8.0
    container_name: kafka-2
    ports:
      - "9095:9095"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=d8ce1515-401e-44d4-a444-1b6dba479047
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx2G -Xms2G
    volumes:
      - ./server-2.properties:/opt/bitnami/kafka/config/server.properties
    networks:
      - kafka-net
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1"
    #       memory: "2g"
  kafka-service:
    image: alexflames77/kafka_service:latest
    container_name: kafka-service
    environment:
      - BOOTSTRAP_SERVERS=kafka-1:9092,kafka-2:9095
    networks:
      - kafka-net
    ports:
      - "9091:9091"
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1"
    #       memory: "2g"
    depends_on:
      - kafka-1
      - kafka-2
  jobmanager:
    image: flink:1.17.1
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    networks:
      - kafka-net
    restart: always
  taskmanager:
    image: flink:1.17.1
    container_name: taskmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    networks:
      - kafka-net
    restart: always
    depends_on:
      - jobmanager
  flink-job:
    image: alexflames77/flink_job:latest
    container_name: flink-job
    environment:
      - FLINK_JOBMANAGER_HOST=jobmanager
      - FLINK_JOBMANAGER_PORT=8081    
    networks:
      - kafka-net
    depends_on:
      - jobmanager
      - taskmanager
    restart: on-failure
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1"
    #       memory: "2g"
  # flink-job:
  #   image: alexflames77/flink_job:latest
  #   container_name: flink-job
  #   networks:
  #     - kafka-net
  #   depends_on:
  #     - kafka-1
  #     - kafka-2
  #   restart: always
  # spark-job:
  #   image: alexflames77/spark_job:latest
  #   environment:
  #     - SPARK_MASTER_URL=spark://spark-master:7077
  #     - SPARK_APPLICATION_JAR_LOCATION=/opt/spark-apps/spark-ml-job.jar
  #     - SPARK_APPLICATION_MAIN_CLASS=SparkMLJob
  #   networks:
  #     - kafka-net
  #   restart: always
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: "2g"
  #   depends_on:
  #     - kafka-1
  #     - kafka-2
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      -  prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - kafka-net
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1"
    #       memory: "2g"
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - kafka-net
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "1"
    #       memory: "2g"
networks:
  kafka-net:
    driver: bridge
volumes:
  grafana-storage:
  prometheus-data:
