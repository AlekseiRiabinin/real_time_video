import org.apache.flink.streaming.api.scala._
import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer
import org.apache.flink.streaming.util.serialization.SimpleStringSchema
import java.util.Properties

object FlinkKafkaConsumerJob {
def main(args: Array[String]): Unit = {
// Set up the execution environment
val env = StreamExecutionEnvironment.getExecutionEnvironment

// Configure Kafka consumer properties
val properties = new Properties()
properties.setProperty("bootstrap.servers", "kafka-broker:9092")
properties.setProperty("group.id", "flink-consumer-group")

// Create a Kafka consumer
val kafkaConsumer = new FlinkKafkaConsumer[String](
"video-stream",
new SimpleStringSchema(),
properties
)

// Add the Kafka consumer as a source to the Flink job
val stream = env.addSource(kafkaConsumer)

// Process the stream (for example, print the consumed messages)
stream.print()

// Execute the Flink job
env.execute("Flink Kafka Consumer Job")
}
}